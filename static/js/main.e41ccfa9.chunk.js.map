{"version":3,"sources":["Components/UI/Card.js","Components/Expenses/ExpensesFilter.js","Components/Expenses/ExpenseDate.js","Components/Expenses/ExpenseItem.js","Components/Expenses/ExpensesList.js","Components/Charts/ChartBar.js","Components/Charts/Chart.js","Components/Expenses/ExpensesChart.js","Components/Expenses/Expenses.js","Components/NewExpenses/ExpenseForm.js","Components/NewExpenses/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterDateChange","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","expensesContent","ExpenseFilteredItemsList","length","map","filteredexpense","id","ChartBar","barFillHeight","max","Math","round","style","height","label","Chart","chartDataPointValues","dataPoints","datapoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setfilteredYear","filter","toString","enteredDate","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","setEnteredDate","onSubmit","preventDefault","Date","onExpenseAdded","type","min","step","onClick","stopEditing","NewExpense","startEditing","setStartEditing","enteredExpense","Expense","random","onNewExpense","DUMMY_DATA","App","setExpenses","prevExpenses","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e41ccfa9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = \"card \" + props.className;\r\n    return(\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const yearChangeHandler = (event) => {\r\n      props.onFilterDateChange(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n    \r\n    \r\n      let expensesContent = <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\r\n    \r\n      if (props.ExpenseFilteredItemsList.length > 0) {\r\n        expensesContent = props.ExpenseFilteredItemsList.map((filteredexpense) => (\r\n          <ExpenseItem\r\n            key={filteredexpense.id}\r\n            title={filteredexpense.title}\r\n            amount={filteredexpense.amount}\r\n            date={filteredexpense.date}\r\n          />\r\n        ));\r\n      }\r\n    return(\r\n        <ul className='expenses-list'>\r\n            {expensesContent}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\nimport React from \"react\";\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n    if(props.max > 0) {\r\n        barFillHeight = Math.round((props.value/props.max)*100) + '%';\r\n    }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n          <div className='chart-bar__fill' style={{height:barFillHeight}}></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const chartDataPointValues = props.dataPoints.map(\r\n    (datapoint) => datapoint.value\r\n  );\r\n  const totalMaximum = Math.max(...chartDataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.label}\r\n          value={datapoint.value}\r\n          max={totalMaximum}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Charts/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n    let chartDataPoints = [\r\n        {label: \"Jan\", value : 0},\r\n        {label: \"Feb\", value : 0},\r\n        {label: \"Mar\", value : 0},\r\n        {label: \"Apr\", value : 0},\r\n        {label: \"May\", value : 0},\r\n        {label: \"Jun\", value : 0},\r\n        {label: \"Jul\", value : 0},\r\n        {label: \"Aug\", value : 0},\r\n        {label: \"Sep\", value : 0},\r\n        {label: \"Oct\", value : 0},\r\n        {label: \"Nov\", value : 0},\r\n        {label: \"Dec\", value : 0}\r\n    ];\r\n\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpensesChart;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setfilteredYear] = useState(\"2020\");\r\n\r\n  // const ExpenseItemsList = props.expenses.map((expense) => (\r\n  //   <ExpenseItem\r\n  //     id={expense.id}\r\n  //     title={expense.title}\r\n  //     amount={expense.amount}\r\n  //     date={expense.date}\r\n  //   />\r\n  // ));\r\n\r\n  \r\n\r\n  const filterDateChangeHandler = (enteredDate) => {\r\n    setfilteredYear(enteredDate);\r\n  };\r\n\r\n  const ExpenseFilteredItemsList = props.expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onFilterDateChange={filterDateChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={ExpenseFilteredItemsList}/>\r\n        <ExpensesList selectedYear={filteredYear} ExpenseFilteredItemsList={ExpenseFilteredItemsList}/>\r\n\r\n        {/* <ExpenseItem\r\n          title={props.expenses[0].title}\r\n          amount={props.expenses[0].amount}\r\n          date={props.expenses[0].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.expenses[1].title}\r\n          amount={props.expenses[1].amount}\r\n          date={props.expenses[1].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.expenses[2].title}\r\n          amount={props.expenses[2].amount}\r\n          date={props.expenses[2].date}\r\n        />\r\n        <ExpenseItem\r\n          title={props.expenses[3].title}\r\n          amount={props.expenses[3].amount}\r\n          date={props.expenses[3].date}\r\n        /> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expense = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onExpenseAdded(expense);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n          <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n              <label>Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={enteredTitle}\r\n                onChange={titleChangeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n              <label>Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                value={enteredAmount}\r\n                min=\"0.01\"\r\n                step=\"0.01\"\r\n                onChange={amountChangeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n              <label>Date</label>\r\n              <input\r\n                type=\"date\"\r\n                value={enteredDate}\r\n                min=\"2019-01-01\"\r\n                max=\"2022-12-31\"\r\n                onChange={dateChangeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n              <button onClick={props.stopEditing}>Cancel</button>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n              <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n    const [startEditing, setStartEditing] = useState(false);\r\n    const expenseAddedHandler = (enteredExpense) => {\r\n        const Expense = {\r\n            ...enteredExpense,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onNewExpense(Expense);\r\n        setStartEditing(false);\r\n    };\r\n\r\n    const startEditingHandler= () => {\r\n        setStartEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setStartEditing(false);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!startEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {startEditing && <ExpenseForm stopEditing={stopEditingHandler} onExpenseAdded={expenseAddedHandler} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from \"react\";\nimport Expenses from \"./Components/Expenses/Expenses\";\nimport NewExpense from \"./Components/NewExpenses/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const newExpense = (expense) => {\n    setExpenses((prevExpenses) => {\n      console.log([expense, ...prevExpenses]);\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onNewExpense={newExpense} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}